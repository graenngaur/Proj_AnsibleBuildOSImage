---
- name: create a new image
  hosts: "{{ BUILDSERVER }}" 
  become: no
  gather_facts: false

  
  vars:
    TOKEN: "eyJhbGciOiJIUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJhZDUyMjdhMy1iY2ZkLTRjZjAtYTdiNi0zOTk4MzVhMDg1NjYifQ.eyJpYXQiOjE2ODM3MjA5MTksImp0aSI6IjUzMWNkMjc0LWNlYTAtNDMwMi04NDk3LTQ3Mjg4Zjk2Nzk5ZCIsImlzcyI6Imh0dHBzOi8vc3NvLnJlZGhhdC5jb20vYXV0aC9yZWFsbXMvcmVkaGF0LWV4dGVybmFsIiwiYXVkIjoiaHR0cHM6Ly9zc28ucmVkaGF0LmNvbS9hdXRoL3JlYWxtcy9yZWRoYXQtZXh0ZXJuYWwiLCJzdWIiOiJmOjUyOGQ3NmZmLWY3MDgtNDNlZC04Y2Q1LWZlMTZmNGZlMGNlNjptOTk5Y2VuIiwidHlwIjoiT2ZmbGluZSIsImF6cCI6InJoc20tYXBpIiwic2Vzc2lvbl9zdGF0ZSI6ImE3ODllMWNjLTE0NjAtNDI0ZC1iY2FhLThjNzdjODNjODUyMiIsInNjb3BlIjoib2ZmbGluZV9hY2Nlc3MiLCJzaWQiOiJhNzg5ZTFjYy0xNDYwLTQyNGQtYmNhYS04Yzc3YzgzYzg1MjIifQ.EEKF4XOAnld15CPYc6DQcxsrdMK_B0XizffMJAowzFs"
    URL_TOKEN: "https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token"
    URL_BASE: "https://console.redhat.com/api/image-builder/v1/"
    URL_APIINFO: "openapi.json"
    URL_COMPOSE: "compose"
    URL_STATUS: "composes/{{ IMAGE_ID }}"
    URL_IMAGEDATA: "{{ lookup('file', 'imageRequest.req') }}"

  tasks:

  - name: Opzoeken van de access_token
    uri:
      url: "{{ URL_TOKEN }}"
      method: POST
      body_format: form-urlencoded
      body:
        grant_type: refresh_token
        client_id: rhsm-api
        refresh_token: "{{ TOKEN }}"
      status_code: 200
      timeout: 30
    register: results
    
  #- name: print de uitkomst van POST request
  #  debug:
   #   var: results
      
  - set_fact:
      "ACCESS_TOKEN": "{{ results.json | json_query('access_token') }}"
      
  - name: Creatie van image 
    uri:
      url: "{{ URL_BASE }}{{ URL_COMPOSE }}"
      method: POST
      headers:
         Authorization: Bearer {{ ACCESS_TOKEN }}
         Content-Type: application/json
      body_format: json
      body: "{{ URL_IMAGEDATA }}"
      status_code: 201
    register: results
    
  - set_fact:
      "IMAGE_ID": "{{ results.json | json_query('id') }}"
      
  - name: Opzoeken van de creatie status
    uri:
      url: "{{ URL_BASE }}{{ URL_STATUS }}"
      method: GET
      headers:
         Authorization: Bearer {{ ACCESS_TOKEN }}
    register: results
    until: results.json.image_status | json_query('status') == 'success'
    retries: 10
    delay: 60
    ignore_errors: yes

 # - name: print de uitkomst van build request
 #   debug:
  #    var: results

  - set_fact:
      "IMAGE_URL": "{{ results.json.image_status.upload_status.options | json_query('url') }}"

  - name: Ophalen van image
    get_url:
      url: "{{ IMAGE_URL }}"
      dest: /tmp
      owner: root
      group: root
      status_code: 200
    register: results_download
